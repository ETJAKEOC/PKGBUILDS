pkgname=lib32-mesa-git
pkgdesc="an open-source implementation of the OpenGL specification, git version"
pkgver=25.0.0_devel.199159.da18cd9f9a0.d41d8cd
pkgrel=1
arch=('x86_64')
makedepends=(
	'git'
	'xorgproto'
	'meson'
	'python-mako'
	'python-packaging'
	'python-pyaml'
	'lib32-libxml2'
	'lib32-libvdpau'
	'lib32-libglvnd'
	'lib32-libva'
	'lib32-libxrandr'
	'wayland-protocols'
)
depends=(
	'mesa-git'
	'glslang'
	'lib32-gcc-libs'
	'lib32-libdrm'
	'lib32-wayland'
	'lib32-libxxf86vm'
	'lib32-libxdamage'
	'lib32-libxshmfence'
	'lib32-libelf'
	'lib32-libunwind'
	'lib32-lm_sensors'
	'lib32-vulkan-icd-loader'
	'lib32-zstd'
	'lib32-libxcb'
	'lib32-libxfixes'
	'lib32-expat'
	'lib32-libxext'
	'lib32-libx11'
	'lib32-zlib'
	'lib32-glibc'
	'lib32-spirv-tools'
)
optdepends=('opengl-man-pages: for the OpenGL API man pages')
provides=('lib32-mesa' 'lib32-vulkan-intel' 'lib32-vulkan-radeon' 'lib32-vulkan-mesa-layers' 'lib32-libva-mesa-driver' 'lib32-mesa-vdpau' 'lib32-mesa-libgl' 'lib32-opengl-driver' 'lib32-vulkan-driver')
conflicts=('lib32-mesa' 'lib32-vulkan-intel' 'lib32-vulkan-radeon' 'lib32-vulkan-mesa-layers' 'lib32-libva-mesa-driver' 'lib32-mesa-vdpau' 'lib32-mesa-libgl')
url="https://www.mesa3d.org"
license=('custom')
source=('mesa::git+https://gitlab.freedesktop.org/mesa/mesa.git' 'LICENSE')
sha512sums=('SKIP' 'SKIP')
declare -A _crates=(
   proc-macro2    1.0.92
   quote          1.0.37
   syn            2.0.90
   unicode-ident  1.0.14
)

for _crate in "${!_crates[@]}"; do
  source+=($_crate-${_crates[$_crate]}.tar.gz::https://crates.io/api/v1/crates/$_crate/${_crates[$_crate]}/download)
done

pkgver() {
    cd mesa
    local _ver
    _ver=$(<VERSION)
    local _patchver
    local _patchfile
    for _patchfile in "$source[@]"; do
        _patchfile="$_patchfile%%::*"
        _patchfile="$_patchfile##*/"
        [[ $_patchfile = *.patch ]] || continue
        _patchver="$_patchver$(md5sum $srcdir/$_patchfile | cut -c1-32)"
    done
    _patchver="$(echo -n $_patchver | md5sum | cut -c1-7)"
    echo ${_ver/-/_}.$(git rev-list --count HEAD).$(git rev-parse --short HEAD).$_patchver
}

prepare() {
    if [  -d build ]; then
        rm -rf build && mkdir build
    fi
    local _patchfile
    for _patchfile in "$source[@]"; do
        _patchfile="$_patchfile%%::*"
        _patchfile="$_patchfile##*/"
        [[ $_patchfile = *.patch ]] || continue
        echo "Applying patch $_patchfile..."
        patch --directory=mesa --forward --strip=1 --input="$srcdir/$_patchfile"
    done
}

build () {
    arch-meson32 build mesa -D gallium-drivers=r300,r600,radeonsi,virgl,svga,softpipe,llvmpipe,d3d12,v3d -D glvnd=enabled -D gallium-d3d12-graphics=auto \
    -D android-libbacktrace=disabled -D b_ndebug=true -D b_lto=true -D egl=enabled -D gallium-extra-hud=true -D opengl=true -D gallium-d3d12-video=enabled \
    -D gallium-d3d10umd=false -D gallium-nine=true -D gallium-opencl=icd -D gallium-rusticl=false -D gallium-va=enabled -D xlib-lease=enabled \
    -D gallium-vdpau=enabled -D gallium-xa=enabled -D gbm=enabled -D gles1=disabled -D gles2=enabled -D intel-rt=disabled -D glx-direct=true \
    -D glvnd=enabled -D glx=dri -D intel-clc=enabled -D install-intel-clc=true -D libunwind=enabled -D llvm=enabled -D lmsensors=enabled -D shader-cache-max-size=16G \
    -D microsoft-clc=disabled -D osmesa=true -D platforms=x11,wayland -D shared-glapi=enabled -D valgrind=disabled -D shader-cache=enabled \
    -D video-codecs=all -D vulkan-drivers=amd,swrast,virtio,gfxstream -D vulkan-layers=device-select,overlay,screenshot -D draw-use-llvm=true \
    -D tools=[] -D zstd=enabled -D legacy-x11=dri2 -D shared-llvm=enabled -D amd-use-llvm=true -D static-libclc=all -D vulkan-beta=true
    ninja -j$(nproc) -C build
}

package() {
    DESTDIR="$pkgdir" ninja -j$(nproc) -C build install
    rm -rf "$pkgdir"/etc
    rm -rf "$pkgdir"/usr/include
    rm -rf "$pkgdir"/usr/share/glvnd/
    rm -rf "$pkgdir"/usr/share/drirc.d/
    rm -rf "$pkgdir"/usr/share/vulkan/explicit_layer.d/
    rm -rf "$pkgdir"/usr/share/vulkan/implicit_layer.d/VkLayer_MESA_device_select.json
#    rm "$pkgdir/usr/bin/mesa-overlay-control.py"
#    rmdir "$pkgdir/usr/bin"
    ln -s /usr/lib32/libGLX_mesa.so.0 "${pkgdir}/usr/lib32/libGLX_indirect.so.0"
    install -m644 -Dt  "$pkgdir"/usr/share/licenses/$pkgbase/ "$srcdir"/LICENSE 
}
