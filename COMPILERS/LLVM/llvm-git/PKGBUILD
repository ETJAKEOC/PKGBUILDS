# Maintainer: ETJAKEOC <etjakeoc@gmail.com>
pkgbase="llvm-git"
pkgname=('llvm-git' 'llvm-libs-git' 'libclc-git' 'libclang-git' 'openmp-git')
pkgver=20.0.0_r521461.e04fde193bc2
pkgrel=1
arch=('x86_64')
url="https://llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=('git' 'cmake' 'ninja' 'libffi' 'libedit' 'ncurses' 'libxml2' 
             'python-setuptools' 'ocaml' 'ocaml-ctypes' 'ocaml-findlib'
             'swig' 'python' 'python-six' 'lua53' 'mesa-git' 'opencl-headers' 'z3'
             'jsoncpp' 'ocaml-stdlib-shims')
checkdepends=('python-psutil')
source=("llvm-project::git+https://github.com/llvm/llvm-project.git" "llvm-config.h")
sha512sums=('SKIP' 'SKIP')
options=('staticlibs')

pkgver() {
    cd llvm-project/cmake/Modules
    local _pkgver=$(awk -F 'MAJOR |MINOR |PATCH |)' \
            'BEGIN { ORS="." ; i=0 } \
             /set\(LLVM_VERSION_/ { print $2 ; i++ ; if (i==2) ORS="" } \
             END { print "\n" }' \
             LLVMVersion.cmake)_r$(git rev-list --count HEAD).$(git rev-parse --short HEAD)
    echo "$_pkgver"
}

build() {
    cmake_args=(
        -Wnodev
        -G Ninja
        -D LLVM_HOST_TRIPLE=$CHOST
        -D CMAKE_C_COMPILER=clang
        -D CMAKE_CXX_COMPILER=clang++
        -D LLVM_USE_LINKER=lld
        -D CMAKE_C_FLAGS="$CFLAGS"
        -D CMAKE_CXX_FLAGS="$CXXFLAGS"
        -D CMAKE_LINKER_FLAGS="$LDFLAGS"
        -D CMAKE_BUILD_TYPE=Release
        -D LLVM_ENABLE_RUNTIMES="libc;libcxxabi;libcxx;libunwind;offload"
        -D LLVM_ENABLE_PROJECTS="clang;llvm;lld;clang-tools-extra;openmp;polly;bolt;compiler-rt"
        -D LLVM_BUILD_LLVM_DYLIB=ON
        -D LLVM_LINK_LLVM_DYLIB=ON
        -D LLVM_INCLUDE_TESTS=OFF
        -D LLVM_ENABLE_RTTI=ON
        -D LLVM_ENABLE_FFI=ON
        -D LLVM_ENABLE_EXPENSIVE_CHECKS=OFF
        -D LLVM_OPTIMIZED_TABLEGEN=ON
        -D LLVM_ENABLE_LIBXML2=ON
        -D LLVM_ENABLE_DOXYGEN=OFF
        -D LLVM_ENABLE_BINDINGS=ON
        -D LLVM_ENABLE_THREADS=ON
        -D LLVM_TARGETS_TO_BUILD="X86;AMDGPU;BPF;WebAssembly"
        -D LLVM_EXPERIMENTAL_TARGETS_TO_BUILD="DirectX;SPIRV"
        -D LLVM_PARALLEL_LINK_JOBS=$(nproc)
        -D LLVM_PARALLEL_COMPILE_JOBS=$(nproc)
        -D LLDB_USE_SYSTEM_SIX=1
        -D LLVM_CCACHE_BUILD=ON
        -D LIBOMPTARGET_ENABLE_AMDGPU=ON
        -D LIBOMPTARGET_AMDGPU_TARGETS="gfx803;gfx900;gfx906;gfx1010;gfx1030"
        -D POLLY_ENABLE_GPGPU_CODEGEN=ON
        -D BOLT_ENABLE_PGO=ON
        -D POLLY_ENABLE_SHARED=ON
        -D FFI_INCLUDE_DIR:PATH=/usr/include
    )

    cmake -S llvm-project/llvm -B build "${cmake_args[@]}"
    cmake --build build
}

package_llvm-git() {
    pkgdesc="The LLVM Compiler Infrastructure (development version)"
    depends=('llvm-libs-git')
    cd build
    DESTDIR="$pkgdir" ninja install
    install -Dm644 "$srcdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/llvm-config.h"
}

package_llvm-libs-git() {
    pkgdesc="LLVM runtime libraries (development version)"
    cd build
    DESTDIR="$pkgdir" ninja install-llvm-dylib
}

package_libclc-git() {
    pkgdesc="Library requirements of the C++ kernel language (libclc)"
    depends=('llvm-git')
    cd build
    DESTDIR="$pkgdir" ninja install-libclc
}

package_libclang-git() {
    pkgdesc="Clang libraries and headers (development version)"
    depends=('llvm-git' 'llvm-libs-git')
    cd build
    DESTDIR="$pkgdir" ninja install-clang
}

package_openmp-git() {
    pkgdesc="OpenMP runtime library (development version)"
    depends=('llvm-git')
    cd build
    DESTDIR="$pkgdir" ninja install-openmp
}
