# toolchain build order: linux-api-headers->glibc->binutils->gcc->glibc->binutils->gcc
pkgname=binutils
pkgver=17+rbranchpoint+545+g59e09e8bcbe9
pkgrel=1
pkgdesc='A set of programs to assemble and manipulate binary and object files'
arch=(x86_64)
url='https://www.gnu.org/software/binutils/'
license=(GPL-2.0-or-later GPL-3.0-or-later LGPL-2.0-or-later LGPL-3.0-or-later GFDL-1.3 FSFAP)
depends=(glibc jansson libelf zlib zstd)
makedepends=(git)
checkdepends=(bc dejagnu debuginfod)
conflicts=(binutils-multilib)
replaces=(binutils-multilib)
provides=(libctf.so libgprofng.so libsframe.so)
backup=('etc/gprofng.rc')
options=(staticlibs !distcc !ccache)
source=('git+https://sourceware.org/git/binutils-gdb.git' 'gold-warn-unsupported.patch')
sha256sums=('SKIP' 'SKIP')

pkgver() {
  cd binutils-gdb
  git describe --abbrev=12 --tags | sed 's/[^-]*-//;s/[^-]*-/&r/;s/-/+/g;s/_/./'
}

prepare() {
  [[ ! -d binutils-gdb ]] && ln -s binutils-${pkgver} binutils-gdb
  mkdir -p binutils-build
  cd binutils-gdb
  sed -i '/^development=/s/true/false/' bfd/development.sh
  patch -Np1 < ../gold-warn-unsupported.patch
  # Remove all -print-multi-os-directory calls
  find . -type f -name 'configure' -o -name 'Makefile' -o -name '*.in' | while read f; do
    sed -i 's/\$CC \$CPPFLAGS \$CFLAGS \$LDFLAGS -print-multi-os-directory/echo \/usr\/lib/g' "$f"
    sed -i 's/\$(CC) $(CFLAGS) -print-multi-os-directory/echo \/usr\/lib/g' "$f"
  done
}

build() {
  cd binutils-build

  export CC=clang
  export CPP=clang-cpp
  export CXX=clang++
  export LD=lld
  export CC_LD=lld
  export CXX_LD=lld
  export AR=llvm-ar
  export AS=llvm-as
  export NM=llvm-nm
  export STRIP=llvm-strip
  export OBJCOPY=llvm-objcopy
  export OBJDUMP=llvm-objdump
  export READELF=llvm-readelf
  export RANLIB=llvm-ranlib
  export HOSTCC=clang
  export HOSTCXX=clang++
  export HOSTAR=llvm-ar
  export HOSTLD=lld

  export _COMMON_FLAGS="-march=znver2 -mtune=znver2 -O3 -g0 -I/usr/include"
  export CPPFLAGS="$_COMMON_FLAGS"
  export CFLAGS="$_COMMON_FLAGS"
  export CXXFLAGS="$_COMMON_FLAGS"
  export LDFLAGS="-fuse-ld=lld"

  "${srcdir}"/binutils-gdb/configure \
    --prefix=/usr \
    --sysconfdir=/etc \
    --with-lib-path=/usr/lib:/usr/local/lib \
    --with-bugurl=https://gitlab.archlinux.org/archlinux/packaging/packages/binutils/-/issues \
    --enable-cet \
    --enable-colored-disassembly \
    --enable-default-execstack=no \
    --enable-deterministic-archives \
    --enable-gold \
    --enable-ld=default \
    --enable-install-libiberty \
    --enable-jansson \
    --enable-new-dtags \
    --enable-plugins \
    --enable-relro \
    --enable-shared \
    --enable-targets=x86_64-pep,bpf-unknown-none \
    --enable-threads \
    --disable-doc \
    --disable-gdb \
    --disable-gdbserver \
    --disable-libdecnumber \
    --disable-readline \
    --disable-sim \
    --disable-werror \
    --with-debuginfod \
    --with-pic \
    --with-system-zlib

  MAKEINFO=true LLVM=1 LLVM_IAS=1 make -j$(nproc) -O tooldir=/usr
}

package() {
  cd "${srcdir}"/binutils-build
  make DESTDIR="${pkgdir}" install
  tee "${pkgdir}"/usr/lib/libbfd.so << EOS
/* GNU ld script */
INPUT(libbfd.a -lsframe -lliberty -lz -lzstd -ldl)
EOS
  tee "${pkgdir}/usr/lib/libsframe.so" << EOF
/* GNU ld script */
INPUT( /usr/lib/libsframe.a )
EOF
  tee "${pkgdir}/usr/lib/libopcodes.so" << EOF
/* GNU ld script */
INPUT( /usr/lib/libopcodes.a -lbfd )
EOF
}
