pkgname=upscayl
_pkgname=Upscayl
pkgver=2.15.1.r44.gb45bc9b
pkgrel=1
_electronversion=37
_nodeversion=23
pkgdesc="Free and Open Source AI Image Upscaler.(Use system-wide electron)"
arch=('x86_64')
url='https://github.com/upscayl/upscayl'
license=('AGPL-3.0-only')
conflicts=("${pkgname}")
provides=("${pkgname}")
depends=("electron${_electronversion}" 'vulkan-icd-loader')
makedepends=('git' 'npm' 'nvm' 'elfutils' 'curl' 'clang' 'llvm' 'lld'
 'gendesk' 'python' 'node-gyp' 'pkgconf' 'mesa' 'vulkan-headers')
source=(git+${url}.git upscayl.sh)
sha256sums=('SKIP' 'SKIP')

pkgver() {
    cd "${srcdir}/${pkgname}"
    set -o pipefail
    git describe --long --tags --abbrev=7 | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/v//g' ||
    printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short=7 HEAD)"
}

setup_env() {
  export LC_ALL=C
  export NODE_OPTIONS="--max-old-space-size=8192 --trace-warnings"
  export WEBPACK_WORKER_POOL=8
  export YARN_CACHE_FOLDER="$srcdir/.yarn-cache"
  export YARN_ENABLE_IMMUTABLE_INSTALLS=1
}

prepare() {
    cd "${srcdir}/${pkgname}"
    setup_env
    rm -f package-lock.json yarn.lock

npm install --save-dev --legacy-peer-deps --loglevel=error \
    typescript@4.9.5 \
    i18next@23.16.8 \
    i18next-parser@9.3.0 \
    @typescript-eslint/parser@8.34.1 \
    @typescript-eslint/eslint-plugin@8.34.1 \
    eslint@8.57.1 \
    eslint-config-next@15.3.4 \
    next \
    npm \
    ajv \
    prettier \
    electron-rebuild \
    electron-builder \
    webpack \
    webpack-cli \
    webpack-dev-server \
    babel-loader \
    @babel/core \
    @babel/preset-env \
    css-loader \
    style-loader \
    file-loader \
    @types/node \
    eslint-plugin-import \
    eslint-plugin-node \
    postcss \
    postcss-loader \
    lru-cache \
    source-map-support \
    webpack-bundle-analyzer

    npm install --force --ignore-scripts --legacy-peer-deps --loglevel=error
    sed -i 's/case "x32":/case "x32":\n    case "ia32":/' electron/utils/get-device-specs.ts
    gendesk -q -f -n \
        --pkgname="${pkgname}" \
        --pkgdesc="${pkgdesc}" \
        --categories="Graphics" \
        --name="${_pkgname}" \
        --exec="${pkgname} %U"
    export ELECTRON_SKIP_BINARY_DOWNLOAD=1
    export SYSTEM_ELECTRON_VERSION="$(electron${_electronversion} -v | sed 's/v//g')"
    electronDist="/usr/lib/electron${_electronversion}"
    sed -i "s/org.${pkgname}.${_pkgname}/${pkgname}/g" \
        flatpak/"org.${pkgname}.${_pkgname}".metainfo.xml
}

build() {
    cd "${srcdir}/${pkgname}"
    setup_env
    npm install --legacy-peer-deps --loglevel=error
    npm run tsc --legacy-peer-deps
    npm run build --legacy-peer-deps
    npm exec -c "electron-builder --linux dir -c.electronDist=${electronDist}"
}

package(){
    install -Dm755 "${srcdir}/${pkgname}.sh" "${pkgdir}/usr/bin/${pkgname}"
    install -Dm755 -d "${pkgdir}/usr/lib/${pkgname}"
    cp -Pr --no-preserve=ownership "${srcdir}/${pkgname//-/.}/dist/linux-"*/resources/* "${pkgdir}/usr/lib/${pkgname}"
    install -Dm644 "${srcdir}/${pkgname//-/.}/build/icon.png" "${pkgdir}/usr/share/pixmaps/${pkgname}.png"
    install -Dm644 "${srcdir}/${pkgname}/upscayl.desktop" "${pkgdir}/usr/share/applications/${pkgname}.desktop"
    install -Dm644 "${srcdir}/${pkgname//-/.}/flatpak/org.${pkgname}.${_pkgname}.metainfo.xml" "${pkgdir}/usr/share/metainfo/${pkgname}.metainfo.xml"
}
